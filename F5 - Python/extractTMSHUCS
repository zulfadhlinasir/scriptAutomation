#DEFINE localdir, where you want to save this UCS to 
localDir="ucsDir/" 
#INVENTORY FILE
inventoryFile="T2GuestKapla"

#DEFINING LIST OF COMMAND
tmshsaveUCS="tmsh save sys ucs $(echo $HOSTNAME | awk -F. '{print $1}')_v12_$(date '+%Y%m%d')_initial.ucs"
tmshshowSys="tmsh -q show /sys connection"
tmshSysCluster="tmsh show sys cluster"
tmshHostname="tmsh list sys global-settings hostname | grep host"

#####################################################################################################

#EXTRACT CREDENTIAL
def extractCredentialFunct():
  username="Mohammad.Nasir"
  password=getpass.getpass(prompt='Password:',stream=None)
  return username,password

#LOGIN
def initiateLoginFunct(username,password,hostIP):
  try:
    net_connect = netmiko.ConnectHandler(device_type="f5_ltm", ip=hostIP,username=username,password=password, port="22",verbose=True)
    return net_connect
  except:
    print("########Failed to login to ",hostIP.strip())

def saveUCSFunct(net_connect):
  try:
    switchBash= net_connect.send_command_timing(' bash ', delay_factor=2)
    saveUCS=net_connect.send_command_timing(tmshsaveUCS, read_timeout=0,last_read=10)
    ucsNameAndDir=saveUCS.splitlines()[1].split()[0]
    ucsName=ucsNameAndDir.split('/')[4]
    return ucsName,ucsNameAndDir
  except:
    print("########Also failed to save its UCS")
    
#####################################################################################################


#PRINT SYS CONN
#sysConn= net_connect.send_command_timing(tmshshowSys,delay_factor=15)
#if "(y/n)" in sysConn:
#    sysConn= net_connect.send_command_timing("y", read_timeout=400,strip_prompt=True,strip_command=True)
#print(sysConn)

#####################################################################################################

def readInventoryAndSaveUCSAndDownloadUCSFunct():
  #EXTRACT CREDENTIAL
  username,password=extractCredentialFunct()
  ssh = SSHClient()
  ssh.set_missing_host_key_policy(AutoAddPolicy)
  failedDeviceCombine=[]
  with open(inventoryFile) as openingFile:
    for line in openingFile:
      #INITIATE SAVE UCS and take UCS name along with its directory
      try:
        hostIP=line.split()[1]
        hostName=line.split()[0]
        ucsName,ucsNameAndDir=saveUCSFunct(initiateLoginFunct(username,password,hostIP))
        localFile=localDir+ucsName
        #STRIP hostIP to strip trailing newline
        deviceIP=hostIP.strip()
        ssh.connect(deviceIP,username=username,password=password)
        with SCPClient(ssh.get_transport()) as scp:
          scp.get(ucsNameAndDir,localFile)
      except:
        print("########Something wrong during save/download UCS of device IP:",hostIP.strip())
        failedDevice=(hostName + "," + hostIP.strip())
        failedDeviceCombine.append(failedDevice)
    print("failed device are:",failedDeviceCombine)

  
#####################################################################################################

readInventoryAndSaveUCSAndDownloadUCSFunct()
